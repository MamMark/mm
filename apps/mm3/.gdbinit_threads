
#threads

disp/i $pc
x/i $pc
set pri ele 0

b TinyOSMainP.nc:83
#b TinyOSMainP.nc:90
b *TinyOSMainP$TinyOSBoot$booted+0d64

#task scheduler
b SchedulerBasicP.nc:137

#thread scheduler
#b SchedulerBasicP.nc:134

#mcu sleep
#b TinyThreadSchedulerP.nc:94

#thread dispatch
b TinyThreadSchedulerP.nc:76

#b VirtualizeTimerC.nc:81

# Arbiter request and release

#b ArbiterP.nc:77
#b ArbiterP.nc:110

dis

b PanicP.nc:42
comm
printf "pcode: %d  where: %d  %04x %04x %04x %04x\n",_p, _w, _a0, _a1, _a2, _a3
end

#b mm3CommP.nc:157
#comm
#p id
#end

# break at finish collect 1024 chrs (BRK_WRAP)
b GPSP.nc:770
dis 6

# break chr avail to gpsc state machine (BRK_GOT_CHR)
b GPSP.nc:773
comm
p GPSP$gpsc_state
p GPSP$gpsm_state
end
dis 7

# BRK_GPS_TIMER
b GPSP.nc:609
comm
p GPSP$gpsc_state
end
dis 8

# BRK_SEND_DONE
b GPSP.nc:852

# BRK_FINISH
b GPSP.nc:361

b CradleP.nc:68
b CradleP.nc:74
b CradleP.nc:80
b CradleP.nc:97
b CradleP.nc:104

b GPSP.nc:470
b GPSP.nc:519

#b CollectP.nc:45
#comm
#printf "collect: len: %d (0x%02x), type: %d  id: %d\n",dlen,dlen,data[2],data[3]
#end

#b mm3CommDataP.nc:80
#comm
#printf "Data: sns: %d\n", client_id
#end
#dis 7-8

#b mm3C.nc:136
#b SDP.nc:229
#b SDP.nc:390

#b mm3CommDataP.nc:163
#comm
#printf "inUse[%d] cleared\n",last
#end

# b sig_TIMERA0_VECTOR
# b sig_TIMERA1_VECTOR
# b sig_TIMERB0_VECTOR
# b sig_TIMERB1_VECTOR

# b AdcP.nc:219
# comm
# printf "PUD: owner: %d  req: %d  adc_state: %02x\n", AdcP$adc_owner, AdcP$req_client, AdcP$adc_state
# end
# b AdcP.nc:372
# comm
# printf "PowerAlarm: owner: %d\n", AdcP$adc_owner
# end
# b AdcP.nc:412
# comm
# printf "reqConf: id: %d\n",client_id
# end
# b AdcP.nc:453
# comm
# printf "reconfig: %d\n",AdcP$adc_owner
# end
# b AdcP.nc:492
# comm
# printf "release: %d %d\n",AdcP$adc_owner,client_id
# end
