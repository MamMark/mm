
printf "\n***\n*** DEV6A gdb\n***\n\n"
source .gdb/.gdb_hwMm.py

define hw_pwr
printf "gm_1v8:  %d    3v3:    %d    radio_pwr: %d    vel_pwr:   %d\n", \
    1, 1, 1, 1
printf "tmp_pwr: %d    sd_pwr: %d    radio_sel: %d    press_pwr: %d\n, \
    1, 1, 0, 1
printf "scl:     %d\n", (($p1->IN >> 7) & 1)
end

define hw_radio
printf "\nradio(ub2): cts: %d  irqN: %d  sdn: %d  csN: %d   siok\n", \
    (($p2->IN >> 4) & 1),  (($p5->IN >> 1) & 1), \
    (($p5->OUT >> 0) & 1), (($p5->OUT >> 2) & 1)
printf "                 %c        %c       %c       %c    %c%c%c\n", \
    ($p2->DIR & (1<<4))?'O':'I', ($p5->DIR & (1<<1))?'O':'I', \
    ($p5->DIR & (1<<0))?'O':'I', ($p5->DIR & (1<<2))?'O':'I', \
    ($p3->SEL0 & (1 << 6)) ? 'M' : 'p', ($p3->SEL0 & (1 << 7)) ? 'M' : 'p', \
    ($p3->SEL0 & (1 << 5)) ? 'M' : 'p'
__p_usci $ucb2 2 1 0d22
end
document hw_radio
display radio hardware state
end

define cts
printf "cts: %d  irqN: %d  sdn: %d  csN: %d\n",  \
    (($p2->IN  >> 4) & 1), (($p5->IN  >> 1) & 1), \
    (($p5->OUT >> 0) & 1), (($p5->OUT >> 2) & 1)
end
document cts
current status of various Si446x radio pins
end

define sd0
printf "\nuSD0(ub3): pwr: %d  csN: %d    siok\n", \
    1, (($p10->OUT >> 0) & 1)
printf "                %c       %c     %c%c%c\n", \
    'O', ($p10->DIR & (1 << 0)) ?'O':'I', \
    ($p10->SEL0 & (1 << 2)) ? 'M' : 'p', ($p10->SEL0 & (1 << 3)) ? 'M' : 'p', \
    ($p10->SEL0 & (1 << 1)) ? 'M' : 'p'
__p_usci $ucb3 3 1 0d23
output SDspP__0__sdc
printf "\n"
printf "Delta times:\n"
printf "  last_full_reset_time_us:  0d%d\n", \
       SDspP__0__last_full_reset_time_us
printf "  last_reset_delta_ms: 0d%d/%d  _us: 0d%d/%d\n", \
          SDspP__0__last_reset_delta_ms, SDspP__0__max_reset_time_ms, \
          SDspP__0__last_reset_delta_us, SDspP__0__max_reset_time_us
printf "  last_read_delta_ms: 0d%d/%d  _us: 0d%d/%d\n", \
          SDspP__0__last_read_delta_ms, SDspP__0__max_read_time_ms,   \
          SDspP__0__last_read_delta_us, SDspP__0__max_read_time_us
printf "  last_write_delta_ms: 0d%d/%d  _us: 0d%d/%d\n", \
          SDspP__0__last_write_delta_ms, SDspP__0__max_write_time_ms, \
          SDspP__0__last_write_delta_us, SDspP__0__max_write_time_us
printf "  last_erase_delta_ms: 0d%d/%d  _us: 0d%d/%d\n", \
          SDspP__0__last_erase_delta_ms, SDspP__0__max_erase_time_ms, \
          SDspP__0__last_erase_delta_us, SDspP__0__max_erase_time_us
printf "DMA stats:\n"
output/d SD0HardwareP__dma_stats
printf "\n"
end
document sd0
display sd0 state
end

define sd1
printf "\nuSD1(ua1): pwr: %d  csN: %d    siok\n", \
    1, (($p9->OUT >> 4) & 1)
printf "                %c       %c     %c%c%c\n", \
    'O', ($p9->DIR & (1 << 4)) ?'O':'I', \
    ($p7->SEL0 & (1 << 2)) ? 'M' : 'p', ($p7->SEL0 & (1 << 1)) ? 'M' : 'p', \
    ($p7->SEL0 & (1 << 0)) ? 'M' : 'p'
__p_usci $uca1 1 0 0d17
output SDspP__1__sdc
printf "\n"
end
document sd1
display sd1 state
end

define hw_gps
printf "\ngps(ua2): on_off: %d  nRst: %d  awake: %d    grt\n", \
    ($p4->OUT & 1), ($p6->OUT & 1), (($p6->IN >> 1) & 1)
printf "                  %c        %c         %c     %c%c\n", \
    ($p4->DIR & (1<<0))?'O':'I', ($p6->DIR & (1<<0))?'O':'I', \
    ($p6->DIR & (1<<1))?'O':'I', \
    ($p3->SEL0 & (1 << 3)) ? 'M' : 'p', ($p3->SEL0 & (1 << 2)) ? 'M' : 'p'
__p_usci $uca2 2 0 0d18
end
document hw_gps
display gps hardware state
end

#
# Port 6.0, gps_resetn
#
# set P6.0 to 1pO       BITBAND_PERI(P6->DIR, 0) = 1;  *420988a0 = 1
# set P6.0 to 0pO       BITBAND_PERI(P6->OUT, 0) = 0;  *42098860 = 0
# set P6.0 to 1pO       BITBAND_PERI(P6->OUT, 0) = 1;  *42098860 = 1
#   leave at 1pO
# set P6.0 to 1pI       BITBAND_PERI(P6->DIR, 0) = 0;  *420988a0 = 0
#
set $_gps_resetn     = (uint8_t *) 0x42098860
set $_gps_resetn_dir = (uint8_t *) 0x420988a0

define rg
set *$_gps_resetn_dir = 1
set *$_gps_resetn     = 0
set *$_gps_resetn     = 1
end
document rg
reset gps h/w
end

define rg0
set *$_gps_resetn_dir = 1
set *$_gps_resetn     = 0
end

define rg1
set *$_gps_resetn     = 1
end

#
# tmp i2c bus
# tmp(ub0): pwr: 1    sdk
#                O     MM
#
define hw_tmp
printf "\ntmp(ub0): pwr: %d    sdk\n", 1
printf "               %c     %c%c\n", 'O', \
    ($p1->SEL0 & (1 << 6)) ? 'M' : 'p', ($p1->SEL0 & (1 << 7)) ? 'M' : 'p'
__p_usci $ucb0 0 1 0d20
end
document hw_tmp
display tmp i2c bus hardware state
end
