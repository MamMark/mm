General

  Blink for some reason seems to fire the 500 timer
  first.  Why?


  LedRail with 2 timers when -Os optimization does the
  wrong thing.  ie. It should fire timer 0 (VoutTimer) but
  fires Timer0 from LedRailC.  Wrong code is generated.
  Adding a 3rd timer makes it work right.


  Investigate using IAR or CCS.


Bring Up (mm5a):

. verify clocks
  . 32KHz
  . 8 MHz

. verify power
  . 3v3 rail
  . 1V8 rail
  . solar
  . bat sense
  . try bat pwr


. turn deputy/safe on and see what happens

. fix Arbiter bug (fcfs) so it correctly cycles.  (fixed?)
. make sure that BlockingAMReceiverImpl still works.  What was the bug?


CmdHandler:

1) Write simple base side for sending/receiving commands.
2) Command processors.  Which ones first?


Duty Analysis:

. Verification of results.
. adaptation to profiling?
  a) Power profiling (Sensor Power System, MCU)
  b) Code profiling


1) Port John's code.
2) Sample run.
3) Flesh out effort.
4) log interface to SD.  Can we reuse StreamWrite code?


Current Code:

. Turn on DMA for SD
. find out why GPS gets toobig and checksum fail
. figure out when to do the dcocalibrate.


SD work:

. Robustness of SD driver
. remove threadbase, event driven?
. add code for SDHC.


Serial Restructure:

*. What happens if USART (arb0) is requested while arb1 is cycling.

*1) Understand panics
2) Diagram usage of SerialDemux, SerialClientUart{Byte, Stream},
   SerialDefOwnerClient, SerialDemuxResource, SerialDemuxDefaultOwner,
   MuxControl
3) Flesh out changes to serial stack.



Failure Recovery

If we detect memory corruption,  PANIC and REBOOT.


How do we want the machine to degrade if there are failures?

- If Collect/StreamStorage/SD fails what to do?
- Could keep status of each subsystem and only allow the subsystem to work if the subsystem is up.

- What we want...  If something goes wrong we want to note it in some fashion so we can see it.

1st tier: log into SD.  Panic.warn
  (assume collect, Stream, and SD are all up)  If they aren't more is wrong than what we are
  warning about so we have other things to worry about.

2nd tier: log via comm.  But how does this work if we aren't communicating.  Try and if
   not connected than it gets dropped.

3rd tier: Panic code writes image into panic area (ram gets written to SD).  Need panic
manager to control where the image gets written.


*Need versioning.  So if we look at a ram image we can correlate it to a code version.




done . remove othersWaiting
