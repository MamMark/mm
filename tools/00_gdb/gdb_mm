#
# Various gdb routines for messing with random
# MamMark things.
#

# display trace buffer
define tb
printf "trace buffer:  nxt: %d\n", trace_nxt
print trace_buf
end


#
# SD
#

define erase
ena 2
mon reset
c
set do_erase=1
printf "do_erase: %d\n", do_erase
dis 2
end
document erase
set up for doing a manual errase
end


define cs
printf "\n"
printf "majik:  %04x       %04x\n", CollectP__dcc.majik_a, CollectP__dcc.majik_b
printf "chksum: %04x  seq: %04x\n", CollectP__dcc.chksum,  CollectP__dcc.seq
printf "handle: %08x   %08x\n",     CollectP__dcc.handle,  CollectP__dcc.cur_buf
printf "curptr: %08x   r: %d  (w: %d)\n", \
    CollectP__dcc.cur_ptr, CollectP__dcc.remaining, 0d508-CollectP__dcc.remaining
end
document cs
Collector State
end


define __print_ss_entry
# arg0 index
set $_entry = SSWriteP__ssw_p[$arg0]
printf "\n           [%08x] %04x  ts: %08lx ", &$_entry->buf, $_entry->majik, $_entry->stamp
output $_entry->buf_state
end

define ss
printf "\n"
print SSWriteP__ssc
printf "\n"
printf "    majik:  %04x  %04x  state: ", SSWriteP__ssc.majik_a, SSWriteP__ssc.majik_b
output SSWriteP__ssc.state
printf "\n"
printf "    alloc:  %02x  in: %02x  out: %02x  full: %02x  max: %02x\n",   \
    SSWriteP__ssc.ssw_alloc, SSWriteP__ssc.ssw_in, SSWriteP__ssc.ssw_out, \
    SSWriteP__ssc.ssw_num_full, SSWriteP__ssc.ssw_max_full
printf "     dblk:  %08x  cur_hand: %08x\n", SSWriteP__ssc.dblk, SSWriteP__ssc.cur_handle
printf "  buffers:"
set $_i=0
while $_i < 0d5
    __print_ss_entry $_i
    set $_i++
end
printf "\n"
end
document ss
StreamStorage state
end


define im
printf "\n"
print ImageManagerP__imcb
printf "\n"
printf "buf_ptr:  %08x, remaining: %04x (%d)\n", ImageManagerP__imcb.buf_ptr, \
        ImageManagerP__imcb.bytes_remaining, ImageManagerP__imcb.bytes_remaining,
printf "IM state: "
output ImageManagerP__imcb.im_state
printf "\n"
end
document im
ImageManager State
end

